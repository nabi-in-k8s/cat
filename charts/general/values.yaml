nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

replicas: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
# - name: secretName

deployment:
  create: false
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

container:
  labels: {}
  annotations: {}
  securityContext: {}
    # fsGroup: 2000
  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
  readinessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  env: []
  # - name: FOO
  #   value: BAR

volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

affinity: {}

service:
  create: false
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      # target: 80

ingress:
  create: false
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: ImplementationSpecific
          svcPort:
            name: http
            number: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - ""

storageClass:
  create: false
  provisioner: kubernetes.io/no-provisioner
  volumeBindingMode: WaitForFirstConsumer

persistentVolumes: []
  # - name: ""
  #   annotations: {}

  #   accessModes:
  #     - ReadWriteOnce
  #   reclaimPolicy: Retain
  #   size: 1Gi
  #   path: ""

  #   claim:
  #     create: true
  #     accessModes: []
  #     size: 1Gi
