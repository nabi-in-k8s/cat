ghost:
  enabled: true
  replicas: 3

  image:
    tag: 5.89.0

  deployment:
    create: true

  container:
    env:
      - name: NODE_ENV
        value: production
      - name: database__connection__filename
        value: /var/lib/ghost/content/data/ghost.db
      - name: GHOST_HOST
        value: blog.k8s.nabi.kim
      - name: GHOST_PROTOCOL
        value: blog.k8s.nabi.kim

  volumes:
    - name: blog-ghost-contents
      persistentVolumeClaim:
        claimName: blog-ghost-contents
    - name: blog-ghost-database
      persistentVolumeClaim:
        claimName: blog-ghost-database

  volumeMounts:
    - name: blog-ghost-contents
      mountPath: /var/lib/ghost/content
    - name: blog-ghost-database
      mountPath: /var/lib/ghost/content/data

  service:
    create: true
    ports:
      - name: ghost
        port: 2368
        target: 2368

  ingress:
    create: false
    className: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: blog.k8s.nabi.kim
        paths:
          - prefix: /
            pathType: Prefix
            svcPort:
              name: ghost
    tls:
      - secretName: ghost-tls
        hosts:
          - blog.k8s.nabi.kim

  storageClass:
    create: true
    provisioner: kubernetes.io/no-provisioner
    volumeBindingMode: WaitForFirstConsumer

  persistentVolumes:
    - name: blog-ghost-contents
      accessModes:
        - ReadWriteMany
      size: 20Gi
      path: /data/ghost/content
      reclaimPolicy: Retain
      claim:
        create: true
    - name: blog-ghost-database
      accessModes:
        - ReadWriteMany
      size: 5Gi
      path: /data/ghost/database
      reclaimPolicy: Retain
      claim:
        create: true
