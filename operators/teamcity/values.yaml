database:
  enabled: false
  nameOverride: "database"

  image:
    repository: postgres
    tag: latest

  deployment:
    create: true
    securityContext:
      fsGroup: 1000

  container:
    livenessProbe:
      exec:
        command: ["bash", "-c", "pg_isready -U$POSTGRES_USER -d$POSTGRES_DB"]
      initialDelaySeconds: 15
      timeoutSeconds: 2
    readinessProbe:
      exec:
        command: ["bash", "-c", "pg_isready -U$POSTGRES_USER -d$POSTGRES_DB"]
      initialDelaySeconds: 45
      timeoutSeconds: 2
    env:
      - name: POSTGRES_USER
        valueFrom:
          secretKeyRef:
            name: teamcity-postgres-secret
            key: username
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: teamcity-postgres-secret
            key: password
      - name: POSTGRES_DB
        valueFrom:
          secretKeyRef:
            name: teamcity-postgres-secret
            key: database
      - name: PG_DATA
        value: /var/lib/postgresql/data

  service:
    create: true
    ports:
      - name: postgres
        port: 5432
        protocol: TCP

  storageClass:
    create: true

  persistentVolumes:
    - name: database
      accessModes:
        - ReadWriteMany
      size: 5Gi
      path: "/data/teamcity/postgres"
      claim:
        create: true

  volumes:
    - name: database
      persistentVolumeClaim:
        claimName: database

  volumeMounts:
    - name: database
      mountPath: "/var/lib/postgresql/data"

server:
  enabled: false
  nameOverride: "server"

  image:
    repository: jetbrains/teamcity-server
    tag: 2024.07.1-linux

  deployment:
    create: true
    securityContext:
      runAsUser: 1000
      fsGroup: 1000

  volumes:
    - name: server-config
      persistentVolumeClaim:
        claimName: server-config

  volumeMounts:
    - name: server-config
      mountPath: /data/teamcity_server/datadir

  service:
    create: true
    ports:
      - name: teamcity
        port: 8111
        protocol: TCP

  ingress:
    create: true
    annotations:
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix
            svcPort:
              name: teamcity
    tls:
      - secretName: teamcity-server-tls
        hosts:
          - ""

  storageClass:
    create: true

  persistentVolumes:
    - name: server-config
      accessModes:
        - ReadWriteMany
      size: 10Gi
      path: "/data/teamcity/server"
      claim:
        create: true

agent-0:
  enabled: false
  nameOverride: "agent-0"

  replicas: 1

  image:
    repository: jetbrains/teamcity-agent
    tag: 2024.07.1-linux-sudo

  deployment:
    create: true
    securityContext:
      runAsUser: 1000
      fsGroup: 1000

  container:
    env:
      - name: SERVER_URL
        value: "http://teamcity-server:8111"
      - name: DOCKER_IN_DOCKER
        value: "true"

  service:
    create: true
    ports:
      - name: teamcity
        port: 9090
        target: 9090

  volumes:
    - name: agent-config
      persistentVolumeClaim:
        claimName: agent-config-0

  volumeMounts:
    - name: agent-config
      subPath: agent-0
      mountPath: /data/teamcity_agent/conf

  storageClass:
    create: true

  persistentVolumes:
    - name: agent-config-0
      accessModes:
        - ReadWriteMany
      size: 1Gi
      path: /data/teamcity/agent
      claim:
        create: true

agent-1:
  enabled: false
  nameOverride: "agent-1"

  replicas: 1

  image:
    repository: jetbrains/teamcity-agent
    tag: 2024.07.1-linux-sudo

  deployment:
    create: true
    securityContext:
      runAsUser: 1000
      fsGroup: 1000

  container:
    env:
      - name: SERVER_URL
        value: "http://teamcity-server:8111"
      - name: DOCKER_IN_DOCKER
        value: "true"

  service:
    create: true
    ports:
      - name: teamcity
        port: 9091
        target: 9090

  volumes:
    - name: agent-config
      persistentVolumeClaim:
        claimName: agent-config-1

  volumeMounts:
    - name: agent-config
      subPath: agent-1
      mountPath: /data/teamcity_agent/conf

  storageClass:
    create: true

  persistentVolumes:
    - name: agent-config-1
      accessModes:
        - ReadWriteMany
      size: 1Gi
      path: /data/teamcity/agent
      claim:
        create: true

agent-2:
  enabled: false
  nameOverride: "agent-2"

  replicas: 1

  image:
    repository: jetbrains/teamcity-agent
    tag: 2024.07.1-linux-sudo

  deployment:
    create: true
    securityContext:
      runAsUser: 1000
      fsGroup: 1000

  container:
    env:
      - name: SERVER_URL
        value: "http://teamcity-server:8111"
      - name: DOCKER_IN_DOCKER
        value: "true"

  service:
    create: true
    ports:
      - name: teamcity
        port: 9092
        target: 9090

  volumes:
    - name: agent-config
      persistentVolumeClaim:
        claimName: agent-config-2

  volumeMounts:
    - name: agent-config
      subPath: agent-2
      mountPath: /data/teamcity_agent/conf

  storageClass:
    create: true

  persistentVolumes:
    - name: agent-config-2
      accessModes:
        - ReadWriteMany
      size: 1Gi
      path: /data/teamcity/agent
      claim:
        create: true
