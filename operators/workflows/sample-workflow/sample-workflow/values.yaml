workflow:
  enabled: true

  cert:
    enabled: true
    secretName: "workflow-certs"
    issuerRef:
      name: "letsencrypt-prod"
      kind: "ClusterIssuer"
    dnsNames:
      - "webhook-workflow.k8s.nabi.kim"

  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - "webhook-workflow.k8s.nabi.kim"
    paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            port:
              number: 12000
    tls:
      - secretName: "workflow-certs"
        hosts:
          - "webhook-workflow.k8s.nabi.kim"

  rbac:
    create: true
    serviceAccountName: "workflow-sa"

    workflow:
      create: true
      roleNamePrefix: "workflow"

    sensor:
      create: true
      roleNamePrefix: "sensor"

  eventbus:
    enabled: true

  webhook:
    enabled: true

    service:
      ports:
        - name: webhook
          port: 12000
          targetPort: 12000

    endpoint:
      webhook-workflow:
        port: "12000"
        endpoint: /webhook
        method: POST

    dependencies:
      - name: webhook
        eventSourceName: sample-workflow
        eventName: webhook-workflow

    triggers:
      - template:
          name: webhook-workflow-trigger
          k8s:
            operation: create
            source:
              resource:
                apiVersion: argoproj.io/v1alpha1
                kind: Workflow
                metadata:
                  generateName: webhook-workflow-
                spec:
                  entrypoint: whalesay
                  arguments:
                    parameters:
                      - name: message
                        value: ""
                  templates:
                    - name: whalesay
                      inputs:
                        parameters:
                          - name: message
                      container:
                        image: docker/whalesay:latest
                        command: [cowsay]
                        args: ["{{inputs.parameters.message}}"]
            parameters:
              - src:
                  dependencyName: webhook
                  dataKey: body
                dest: spec.arguments.parameters.0.value
